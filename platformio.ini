; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html
[platformio]
default_envs = micro-devel-usbasp

[env]
framework         = arduino
build_flags       = !python version_macro.py
lib_deps_external =
    thijse/ArduinoLog          @ ^1.1.1  ; MIT license
    philj404/SimpleSerialShell @ ^1.0.0  ; MIT license (See GitHub)

[devel]
;monitor_port  = /dev/ttyPVEControl
;monitor_speed = 115200
build_flags   =
    ${env.build_flags}
    -DCORE_DEBUG_LEVEL=6

[release]
build_flags =
    ${env.build_flags}
    -DCORE_DEBUG_LEVEL=0

[platform_atmelavr]
platform         = atmelavr
lib_deps_builtin = EEPROM

[platform_espressif32]
platform         = espressif32
lib_deps_builtin = Preferences

[upload_uart_avr]
upload_protocol = esptool
upload_port     = /dev/ttyACM0
upload_speed    = 921600

[upload_uart_esptool]
upload_protocol = esptool
upload_port     = /dev/ttyUSB0
upload_speed    = 921600

[upload_armusb]
upload_protocol = olimex-arm-usb-tiny-h
upload_port     = /dev/ttyARMUSB
debug_tool      = olimex-arm-usb-tiny-h
debug_speed     = 2000

[upload_usbasp]
upload_protocol = custom
upload_port     = usb
upload_flags =
    -B 12
    -C
    ${platformio.packages_dir}/tool-avrdude/avrdude.conf
    -p
    $BOARD_MCU
    -P
    $UPLOAD_PORT
    -c
    usbasp
upload_command = avrdude $UPLOAD_FLAGS -U flash:w:$SOURCE:i

[env:micro-devel-usbasp]
extends     = platform_atmelavr, devel, upload_usbasp
board       = micro
build_flags =
    ${devel.build_flags}
lib_deps    =
    ${env.lib_deps_external}
    ${platform_atmelavr.lib_deps_builtin}

[env:esp32dev-devel-esp]
extends     = platform_espressif32, devel, upload_esptool
board       = esp32dev
build_flags =
    ${devel.build_flags}
    -DBOARD_HAS_PSRAM
    -mfix-esp32-psram-cache-issue
lib_deps    =
    ${env.lib_deps_external}
    ${platform_espressif32.lib_deps_builtin}
